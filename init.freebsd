#!/bin/sh
#
# PROVIDE: sickbeard
# REQUIRE: DAEMON sabnzbd
# KEYWORD: shutdown
#
# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# sickbeard_enable (bool):	Set to NO by default.
#			Set it to YES to enable it.
# sickbeard_user:       The user account Sick Beard daemon runs as what
#			you want it to be. It uses '_sabnzbd' user by
#			default. Do not sets it as empty or it will run
#			as root.
# sickbeard_dir:	Directory where Sick Beard lives.
#			Default: /usr/local/sickbeard
# sickbeard_datadir:    Directory to store configurations
#			Default: /usr/local/sickbeard
# sickbeard_pid:        The name of the pidfile to create.
#                       Default is sickbeard.pid in sickbeard_dir.
PATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"

. /etc/rc.subr

name="sickbeard"
rcvar=${name}_enable

load_rc_config ${name}

: ${sickbeard_enable:="NO"}
: ${sickbeard_user:="_sabnzbd"}
: ${sickbeard_dir:="/usr/local/sickbeard"}
: ${sickbeard_datadir:="${sickbeard_dir}"}
: ${sickbeard_pid:="${sickbeard_dir}/sickbeard.pid"}

status_cmd="${name}_status"
stop_cmd="${name}_stop"

pid=`cat ${sickbeard_pid} 2>/dev/null`
command="/usr/sbin/daemon"
command_args="-f -p ${sickbeard_pid} python ${sickbeard_dir}/SickBeard.py --datadir=${sickbeard_datadir} --quiet --nolaunch"

#Ensure user is root when running this script.
if [ `id -u` != "0" ]; then
  echo "Oops, you should be root before running this!"
  exit 1
fi

sickbeard_stop() {
    echo "Stopping $name"
    if [ `grep ^use_api ${sickbeard_datadir}/config.ini | cut -d= -f2 | tr -d " _"` == "1" ]; then
        apikey=`grep ^api_key ${sickbeard_datadir}/config.ini | cut -d= -f2 | tr -d " _"`
	host=`grep ^web_host ${sickbeard_datadir}/config.ini | cut -d= -f2 | tr -d " _"`
	port=`grep ^web_port ${sickbeard_datadir}/config.ini | cut -d= -f2 | tr -d " _"`
	if [ `grep ^enable_https ${sickbeard_datadir}/config.ini | cut -d= -f2 | tr -d " _"` == "1" ]; then 
		fetch -o /dev/null "https://${host}:${port}/api/${apikey}/?cmd=sb.shutdown" > /dev/null 2>&1
        else
		fetch -o /dev/null "http://${host}:${port}/api/${apikey}/?cmd=sb.shutdown" > /dev/null 2>&1
	fi
    else
        kill $pid
    fi
}

sickbeard_status() { 
	if [ -n "${pid}" ]; then
        	echo "$name is running as ${pid}" 
	else
		echo "$name is not running"
    	fi
}

run_rc_command "$1"
