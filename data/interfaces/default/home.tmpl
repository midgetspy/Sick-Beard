#import sickbeard
#import datetime
#from sickbeard.common import *
#from sickbeard import db

#set global $title="Home"
#set global $header="Show List"

#set global $sbPath = ".."

<!--#set global $topmenu="home"#-->
#import os.path
#include $os.path.join($sickbeard.PROG_DIR, "data/interfaces/default/inc_top.tmpl")

#set $myDB = $db.DBConnection()
#set $today = str($datetime.date.today().toordinal())
#set $downloadedEps = $myDB.select("SELECT showid, COUNT(*) FROM tv_episodes WHERE (status IN ("+",".join([str(x) for x in $Quality.DOWNLOADED + [$ARCHIVED]])+") OR (status IN ("+",".join([str(x) for x in $Quality.SNATCHED + $Quality.SNATCHED_PROPER])+") AND location != '')) AND season != 0 and episode != 0 AND airdate <= "+$today+" GROUP BY showid")
#set $allEps = $myDB.select("SELECT showid, COUNT(*) FROM tv_episodes WHERE season != 0 and episode != 0 AND (airdate != 1 OR status IN ("+",".join([str(x) for x in ($Quality.DOWNLOADED + $Quality.SNATCHED + $Quality.SNATCHED_PROPER) + [$ARCHIVED]])+")) AND airdate <= "+$today+" AND status != "+str($IGNORED)+" GROUP BY showid")

<script type="text/javascript" charset="utf-8">
\$.tablesorter.addParser({ 
    id: 'nextAirDate',
    is: function(s) {
        return false;
    },
    format: function(s) {
        if (s == '')
            return '9999-99-99';
        else
            return s;
    },
    type: 'text'
});

\$.tablesorter.addParser({
    id: 'loadingNames',
    is: function(s) {
        return false;
    }, 
    format: function(s) { 
        if (s.indexOf('Loading...') == 0)
            return s.replace('Loading...','!!!');
        else if (s.indexOf('The ') == 0)
            return s.replace('The ', '')
        else if (s.indexOf('A ') == 0)
            return s.replace('A ', '')
        else
            return s;
    },
    type: 'text'
});

\$.tablesorter.addParser({
    id: 'quality',
    is: function(s) {
        return false;
    },
    format: function(s) { 
        return s.toLowerCase().replace('hd',3).replace('sd',1).replace('any',0).replace('best',2).replace('custom',4);
    },
    type: 'numeric'
});

\$.tablesorter.addParser({ 
    id: 'eps',
    is: function(s) {
        return false; 
    },
    format: function(s) {
        match = s.match(/^\<\!\-\-(.*)\-\-\>/)

        if (match == null || match[1] == "?")
            return -10;

        var nums = match[1].split(" / ");

        var finalNum = parseInt((nums[0]/nums[1])*1000)*100;
        if (finalNum > 0)
            finalNum += parseInt(nums[0]);

        return finalNum
    },
    type: 'numeric'
});

\$.tablesorter.addParser({
    id: 'active',
    is: function(s) {
        return false;
    }, 
    format: function(s) {
        if (s == '')
            return '~~';
        else
            return s;
    },
    type: 'text'
});

//http://web.archive.org/web/20080801073104/http://www.jdempster.com/category/code/jquery/tablesortercookiewidget/
\$.tablesorter.addWidget({
  id: 'cookie',
  format: function(table) {
    var sortList = table.config.sortList;
    var tablesorterCookieJar = \$.cookieJar('tablesorter');
    if ( sortList.length > 0) {
      tablesorterCookieJar.set(\$(table).attr('id'), sortList);
    } else {
      var sortList = tablesorterCookieJar.get(\$(table).attr('id'));
      if (sortList && sortList.length > 0) {
        jQuery(table).trigger('sorton', [sortList]);
      }
    }
  }
});
 
\$(document).ready(function(){ 

    // workaround: the tablesorter cookie widget does not support a defaulted sortList set within the $.tablesorter() instantiation
    var tablesorterCookieJar = \$.cookieJar('tablesorter');
    var sortList = tablesorterCookieJar.get('showListTable');
    if (!sortList || !sortList.length)
        sortList = [[5,1],[1,0]];   

    \$("#showListTable").tablesorter({
        sortList: sortList,
        widgets: ['cookie','zebra'],
        headers: {
            0: { sorter: 'nextAirDate' },
            1: { sorter: 'loadingNames' },
            3: { sorter: 'quality' },
            4: { sorter: 'eps' },
            5: { sorter: 'active' }
        }
    });

});
</script>

<table id="showListTable" class="sickbeardTable tablesorter" cellspacing="1" border="0" cellpadding="0">

  <thead><tr><th>Next Ep</th><th>Show</th><th>Network</th><th>Quality</th><th>Downloads</th><th>Active</th><th>Status</th></tr></thead>
  <tfoot>
    <tr>
      <th rowspan="1" colspan="1"><a href="$sbRoot/home/addShows/">Add Show</a></th>
      <th rowspan="1" colspan="6"></th>
    </tr>
  </tfoot>
  <tbody>

#for $curLoadingShow in $sickbeard.showQueueScheduler.action.loadingShowList:

  #if $curLoadingShow.show != None and $curLoadingShow.show in $sickbeard.showList:
    #continue
  #end if

  <tr>
    <td align="center">(loading)</td>
    <td>
    #if $curLoadingShow.show == None:
    Loading... ($curLoadingShow.show_name)
    #else:
    <a href="displayShow?show=$curLoadingShow.show.tvdbid">$curLoadingShow.show.name</a>
    #end if
    </td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
  </tr>
#end for

#set $myShowList = $sickbeard.showList
$myShowList.sort(lambda x, y: cmp(x.name, y.name))
#for $curShow in $myShowList:
#set $curEp = $curShow.nextEpisode()

#set $curShowDownloads = [x[1] for x in $downloadedEps if int(x[0]) == $curShow.tvdbid]
#set $curShowAll = [x[1] for x in $allEps if int(x[0]) == $curShow.tvdbid]
#if len($curShowAll) != 0:
  #if len($curShowDownloads) != 0:
    #set $dlStat = str($curShowDownloads[0])+" / "+str($curShowAll[0])
    #set $nom = $curShowDownloads[0]
    #set $den = $curShowAll[0]
  #else
    #set $dlStat = "0 / "+str($curShowAll[0])
    #set $nom = 0
    #set $den = $curShowAll[0]
  #end if
#else
  #set $dlStat = "?"
  #set $nom = 0
  #set $den = 1
#end if

  <tr>
    <td align="center" nowrap="nowrap">#if len($curEp) != 0 then $curEp[0].airdate else ""#</td>
    <td><a href="$sbRoot/home/displayShow?show=$curShow.tvdbid">$curShow.name</a></td>
    <td>$curShow.network</td>
#if $curShow.quality in $qualityPresets:
    <td align="center">$qualityPresetStrings[$curShow.quality]</td>
#else:
    <td align="center">Custom</td>
#end if
    <td align="center"><!--$dlStat--><div id="progressbar$curShow.tvdbid" style="position:relative;"></div></td>
    <td align="center"><img src="$sbRoot/images/#if int($curShow.paused) == 0 and $curShow.status != "Ended" then "yes16.png\" alt=\"Y\"" else "no16.png\" alt=\"N\""# width="16" height="16" /></td>
    <td align="center">$curShow.status</td>
  </tr>

<script type="text/javascript">
   \$(function() {
       \$("\#progressbar$curShow.tvdbid").progressbar({
           value: parseInt($nom) * 100 / parseInt($den)
       });
       \$("\#progressbar$curShow.tvdbid").append( "<!--$dlStat--><div class='progressbarText'>$dlStat</div>" )
   });
</script>

#end for
</tbody>
</table>

#include $os.path.join($sickbeard.PROG_DIR, "data/interfaces/default/inc_bottom.tmpl")
