#import sickbeard
#import datetime
#from sickbeard.common import *
#from sickbeard import db

#set global $title="Home"
#set global $header="Show List"

#set global $sbPath = ".."

#set global $topmenu="home"#
#import os.path
#include $os.path.join($sickbeard.PROG_DIR, "data/interfaces/default/inc_top.tmpl")

#set $myDB = $db.DBConnection()
#set $today = str($datetime.date.today().toordinal())
#set $downloadedEps = $myDB.select("SELECT showid, COUNT(*) FROM tv_episodes WHERE (status IN ("+",".join([str(x) for x in $Quality.DOWNLOADED + [$ARCHIVED]])+") OR (status IN ("+",".join([str(x) for x in $Quality.SNATCHED + $Quality.SNATCHED_PROPER])+") AND location != '')) AND season != 0 and episode != 0 AND airdate <= "+$today+" GROUP BY showid")
#set $allEps = $myDB.select("SELECT showid, COUNT(*) FROM tv_episodes WHERE season != 0 and episode != 0 AND (airdate != 1 OR status IN ("+",".join([str(x) for x in ($Quality.DOWNLOADED + $Quality.SNATCHED + $Quality.SNATCHED_PROPER) + [$ARCHIVED]])+")) AND airdate <= "+$today+" AND status != "+str($IGNORED)+" GROUP BY showid")

<script type="text/javascript" charset="utf-8">
<!--

\$.tablesorter.addParser({
    id: 'loadingNames',
    is: function(s) {
        return false;
    },
    format: function(s) {
        if (s.indexOf('Loading...') == 0)
            return s.replace('Loading...','000');
        return (s || '').replace(/^(The|A)\s/i,'');
    },
    type: 'text'
});

\$.tablesorter.addParser({
    id: 'quality',
    is: function(s) {
        return false;
    },
    format: function(s) { 
        return s.replace('hd1080p',5).replace('hd720p',4).replace('hd',3).replace('sd',2).replace('any',1).replace('custom',7);
    },
    type: 'numeric'
});

\$.tablesorter.addParser({ 
    id: 'eps',
    is: function(s) {
        return false;
    },
    format: function(s) { 
        return s;
    },
    type: 'text'
});

\$(document).ready(function(){ 

    function nextXDays(e,n){
        return new Date().setDate(new Date().getDate()+n) > new Date(e);
    }

    \$("#showListTable:has(tbody tr)").tablesorter({
        sortList: [[5,1],[1,0]],
        textExtraction: {
            3: function(node) { return \$(node).find("span").text().toLowerCase(); },
            4: function(node) { return \$(node).find("span").text(); },
            5: function(node) { return \$(node).find("img").attr("alt"); }
        },
        widgets: ['saveSort', 'zebra', 'stickyHeaders', 'filter'],
        headers: {
            0: { sorter: 'isoDate' },
            1: { sorter: 'loadingNames' },
            3: { sorter: 'quality' },
            4: { sorter: 'eps' }
        },
        widgetOptions : {
            filter_functions : {
                0: {
                    "Within three days" : function(e, n, f, i, \$r) { return nextXDays(e,3); },
                    "Within seven days" : function(e, n, f, i, \$r) { return nextXDays(e,7); },
                    "Within 14 days" : function(e, n, f, i, \$r) { return nextXDays(e,14); },
                    "Within a month" : function(e, n, f, i, \$r) { return nextXDays(e,30); }
                },
                4: {
                    "Complete" : function(e, n, f, i, \$r) {return n.charAt(0) === 'C'; },
                    "Incomplete" : function(e, n, f, i, \$r) { return n.charAt(0) === 'B'; },
                    "None" : function(e, n, f, i, \$r) { return n.charAt(0) === 'A'; }
                }
            },
            filter_formatter  : {
                3 :function(\$cell, indx){
                    console.log([\$cell, indx]);
                    return \$.tablesorter.filterFormatter.uiSlider( \$cell, indx, {
                    // add any of the jQuery UI Slider options here (http://api.jqueryui.com/slider/)
                    value: 1,             // starting value
                    min: 1,               // minimum value
                    max: 5,             // maximum value
                    step: 1,
                    delayed: true,        // delay search (set by filter_searchDelay)
                    valueToHeader: false, // add current slider value to the header cell
                    exactMatch: false,    // exact (true) or match (false)
                    allText: 'all',       // text shown when slider is at the minimum value; ignored when compare has a value
                    compare: '>='         // show values >= selected value; overrides exactMatch
                    });
                }
            }
        }
    });
});
//-->
</script>
<style type="text/css">
.slider3 {
    width: 80%;
    left: 10%;
}

.tablesorter-filter.disabled{
    display: none;
}

.tablesorter-filter-row > td > input, select {
    font-size: 12px;
}
</style>

<table id="showListTable" class="tablesorter" cellspacing="1" border="0" cellpadding="0">

  <thead><tr>
    <th class="nowrap" data-placeholder="All">Next Ep</th>
    <th data-placeholder="Type here to search...">Show</th>
    <th class="filter-select" data-placeholder="All">Network</th>
    <th data-placeholder="All">Quality</th>
    <th data-placeholder="All">Downloads</th>
    <th class="filter-false">Active</th>
    <th class="filter-select" data-placeholder="All">Status</th>
    </tr></thead>
  <tfoot>
    <tr>
      <th rowspan="1" colspan="1" align="center"><a href="$sbRoot/home/addShows/">Add Show</a></th>
      <th rowspan="1" colspan="6"></th>
    </tr>
  </tfoot>
  <tbody>

#for $curLoadingShow in $sickbeard.showQueueScheduler.action.loadingShowList:

  #if $curLoadingShow.show != None and $curLoadingShow.show in $sickbeard.showList:
    #continue
  #end if

  <tr>
    <td align="center">(loading)</td>
    <td>
    #if $curLoadingShow.show == None:
    Loading... ($curLoadingShow.show_name)
    #else:
    <a href="displayShow?show=$curLoadingShow.show.tvdbid">$curLoadingShow.show.name</a>
    #end if
    </td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
  </tr>
#end for

#set $myShowList = $list($sickbeard.showList)
$myShowList.sort(lambda x, y: cmp(x.name, y.name))
#for $curShow in $myShowList:
#set $curEp = $curShow.nextEpisode()

#set $curShowDownloads = [x[1] for x in $downloadedEps if int(x[0]) == $curShow.tvdbid]
#set $curShowAll = [x[1] for x in $allEps if int(x[0]) == $curShow.tvdbid]
#if len($curShowAll) != 0:
  #if len($curShowDownloads) != 0:
    #set $dlStat = str($curShowDownloads[0])+" / "+str($curShowAll[0])
    #set $nom = $curShowDownloads[0]
    #set $den = $curShowAll[0]
    #set $per = $nom * 10000 / $den
    #set $sort = "C"+str($curShowAll[0]) if ($nom == $den) else  "B" + str($per)
  #else
    #set $dlStat = "0 / "+str($curShowAll[0])
    #set $nom = 0
    #set $den = $curShowAll[0]
    #set $per = 0
    #set $sort = "B0"
  #end if
#else
  #set $dlStat = "?"
  #set $nom = 0
  #set $den = 1
  #set $per = 0
  #set $sort = "A"
#end if

  <tr>
    <td align="center" class="nowrap">#if len($curEp) != 0 then $curEp[0].airdate else ""#</td>
    <td class="tvShow"><a href="$sbRoot/home/displayShow?show=$curShow.tvdbid">$curShow.name</a></td>
    <td>$curShow.network</td>
#if $curShow.quality in $qualityPresets:
    <td align="center"><span class="quality $qualityPresetStrings[$curShow.quality]">$qualityPresetStrings[$curShow.quality]</span></td>
#else:
    <td align="center"><span class="quality Custom">Custom</span></td>
#end if
    <td align="center"><div id="progressbar$curShow.tvdbid" style="position:relative;"><div class='progressbarText'>$dlStat</div></div><span style="display: none;">$sort</span>
        <script type="text/javascript">
        <!--
            \$(function() {
               \$("\#progressbar$curShow.tvdbid").progressbar({
                   value: $per,
                   max: 10000
               });
            });
        //-->
        </script>
    </td>
    <td align="center"><img src="$sbRoot/images/#if int($curShow.paused) == 0 and $curShow.status != "Ended" then "yes16.png\" alt=\"Y\"" else "no16.png\" alt=\"N\""# width="16" height="16" /></td>
    <td align="center">$curShow.status</td>
  </tr>


#end for
</tbody>
</table>

#include $os.path.join($sickbeard.PROG_DIR, "data/interfaces/default/inc_bottom.tmpl")
