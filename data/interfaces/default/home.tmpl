#import sickbeard
#import datetime
#from sickbeard.common import *
#from sickbeard import db

#set global $title="Home"
#set global $header="Show List"

#set global $sbPath = ".."

#set global $topmenu="home"#
#import os.path
#include $os.path.join($sickbeard.PROG_DIR, "data/interfaces/default/inc_top.tmpl")

#set $myDB = $db.DBConnection()
#set $today = str($datetime.date.today().toordinal())
#set $downloadedEps = $myDB.select("SELECT showid, COUNT(*) FROM tv_episodes WHERE (status IN ("+",".join([str(x) for x in $Quality.DOWNLOADED + [$ARCHIVED]])+") OR (status IN ("+",".join([str(x) for x in $Quality.SNATCHED + $Quality.SNATCHED_PROPER])+") AND location != '')) AND season != 0 and episode != 0 AND airdate <= "+$today+" GROUP BY showid")
#set $allEps = $myDB.select("SELECT showid, COUNT(*) FROM tv_episodes WHERE season != 0 and episode != 0 AND (airdate != 1 OR status IN ("+",".join([str(x) for x in ($Quality.DOWNLOADED + $Quality.SNATCHED + $Quality.SNATCHED_PROPER) + [$ARCHIVED]])+")) AND airdate <= "+$today+" AND status != "+str($IGNORED)+" GROUP BY showid")

<script type="text/javascript" charset="utf-8">
<!--

\$.tablesorter.addParser({
    id: 'loadingNames',
    is: function(s) {
        return false;
    },
    format: function(s) {
        if (s.indexOf('Loading...') == 0)
            return s.replace('Loading...','000');
        return (s || '').replace(/^(The|A)\s/i,'');
    },
    type: 'text'
});

\$.tablesorter.addParser({
    id: 'quality',
    is: function(s) {
        return false;
    },
    format: function(s) { 
        return s.replace('hd1080p',5).replace('hd720p',4).replace('hd',3).replace('sd',2).replace('any',1).replace('custom',7);
    },
    type: 'numeric'
});

\$.tablesorter.addParser({ 
    id: 'eps',
    is: function(s) {
        return false; 
    },
    format: function(s) {
        return s.split('%')[1];
    },
    type: 'numeric'
});

\$(document).ready(function(){ 

    function nextXDays(e,n){
        return new Date().setDate(new Date().getDate()+n) > new Date(e);
    }

    \$("#showListTable:has(tbody tr)").tablesorter({
        sortList: [[5,1],[1,0]],
        textExtraction: {
            3: function(node) { return \$(node).find("span").text().toLowerCase(); },
            4: function(node) { return \$(node).find("span").text(); },
            5: function(node) { return \$(node).find("img").attr("alt"); }
        },
        widgets: ['saveSort', 'zebra', 'stickyHeaders', 'filter'],
        headers: {
            0: { sorter: 'isoDate' },
            1: { sorter: 'loadingNames' },
            3: { sorter: 'quality' },
            4: { sorter: 'eps' }
        },
        widgetOptions : {
            filter_functions : {
                0: {
                    "next three days" : function(e, n, f, i, \$r) { return nextXDays(e,3); },
                    "next seven days" : function(e, n, f, i, \$r) { return nextXDays(e,7); },
                    "next 14 days" : function(e, n, f, i, \$r) { return nextXDays(e,14); },
                    "next month" : function(e, n, f, i, \$r) { return nextXDays(e,30); }
                },
                3: {
                    ">= SD" : function(e, n, f, i, \$r) { return /^[S|H]/.test(e); },
                    ">= HD" : function(e, n, f, i, \$r) { return /^HD/.test(e); },
                    ">= HD720p" : function(e, n, f, i, \$r) { return /^HD(720|1080)/.test(e); },
                    ">= HD1080p" : function(e, n, f, i, \$r) { return /^HD1080/.test(e); }
                },
                4: {
                    "unfinished" : function(e, n, f, i, \$r) { return e.charAt(0) !== '?'?e.split('%')[1]<100:false; },
                    "no episodes found" : function(e, n, f, i, \$r) { return e.charAt(0) === '?'; }
                }
            }
        }
    });

});
//-->
</script>

<table id="showListTable" class="tablesorter" cellspacing="1" border="0" cellpadding="0">

  <thead><tr><th class="nowrap">Next Ep</th><th>Show</th><th class="filter-select">Network</th><th>Quality</th><th>Downloads</th><th>Active</th><th class="filter-select">Status</th></tr></thead>
  <tfoot>
    <tr>
      <th rowspan="1" colspan="1" align="center"><a href="$sbRoot/home/addShows/">Add Show</a></th>
      <th rowspan="1" colspan="6"></th>
    </tr>
  </tfoot>
  <tbody>

#for $curLoadingShow in $sickbeard.showQueueScheduler.action.loadingShowList:

  #if $curLoadingShow.show != None and $curLoadingShow.show in $sickbeard.showList:
    #continue
  #end if

  <tr>
    <td align="center">(loading)</td>
    <td>
    #if $curLoadingShow.show == None:
    Loading... ($curLoadingShow.show_name)
    #else:
    <a href="displayShow?show=$curLoadingShow.show.tvdbid">$curLoadingShow.show.name</a>
    #end if
    </td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
  </tr>
#end for

#set $myShowList = $list($sickbeard.showList)
$myShowList.sort(lambda x, y: cmp(x.name, y.name))
#for $curShow in $myShowList:
#set $curEp = $curShow.nextEpisode()

#set $curShowDownloads = [x[1] for x in $downloadedEps if int(x[0]) == $curShow.tvdbid]
#set $curShowAll = [x[1] for x in $allEps if int(x[0]) == $curShow.tvdbid]
#if len($curShowAll) != 0:
  #if len($curShowDownloads) != 0:
    #set $dlStat = str($curShowDownloads[0])+" / "+str($curShowAll[0])
    #set $nom = $curShowDownloads[0]
    #set $den = $curShowAll[0]
    #set $per = $nom * 100 / $den
  #else
    #set $dlStat = "0 / "+str($curShowAll[0])
    #set $nom = 0
    #set $den = $curShowAll[0]
    #set $per = 0
  #end if
#else
  #set $dlStat = "?"
  #set $nom = 0
  #set $den = 1
  #set $per = -10
#end if


  <tr>
    <td align="center" class="nowrap">#if len($curEp) != 0 then $curEp[0].airdate else ""#</td>
    <td class="tvShow"><a href="$sbRoot/home/displayShow?show=$curShow.tvdbid">$curShow.name</a></td>
    <td>$curShow.network</td>
#if $curShow.quality in $qualityPresets:
    <td align="center"><span class="quality $qualityPresetStrings[$curShow.quality]">$qualityPresetStrings[$curShow.quality]</span></td>
#else:
    <td align="center"><span class="quality Custom">Custom</span></td>
#end if
    <td align="center"><span style="display: none;">$dlStat+%$per%</span><div id="progressbar$curShow.tvdbid" style="position:relative;"><div class='progressbarText'>$dlStat</div></div>
        <script type="text/javascript">
        <!--
            \$(function() {
               \$("\#progressbar$curShow.tvdbid").progressbar({
                   value: $per
               });
            });
        //-->
        </script>
    </td>
    <td align="center"><img src="$sbRoot/images/#if int($curShow.paused) == 0 and $curShow.status != "Ended" then "yes16.png\" alt=\"Y\"" else "no16.png\" alt=\"N\""# width="16" height="16" /></td>
    <td align="center">$curShow.status</td>
  </tr>


#end for
</tbody>
</table>

#include $os.path.join($sickbeard.PROG_DIR, "data/interfaces/default/inc_bottom.tmpl")
