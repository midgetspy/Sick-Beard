#import os.path
#import sickbeard
#from sickbeard.common import *
#from sickbeard import config
#from sickbeard import metadata
#set global $title  = "Config - General"
#set global $header = "General Configuration"

#set global $sbPath="../.."

<!--#set global $topmenu="config"#-->
#include $os.path.join($sickbeard.PROG_DIR, "data/interfaces/default/inc_top.tmpl")

<script type="text/javascript">
nameTestURL = "$sbRoot/config/general/testNaming";
</script>
<script type="text/javascript" src="$sbRoot/js/configGeneral.js"></script>
#set $anyQualities, $bestQualities = $Quality.splitQuality($sickbeard.QUALITY_DEFAULT)
<script>
\$(document).ready(function(){

  if (#if $sickbeard.QUALITY_DEFAULT in $qualityPresets then "1" else "0"#) {
      \$('#customQuality').hide();
  }

  \$.fn.setFromPresets = function(preset) {
      if (preset == 0) {
        \$('#customQuality').show();
        return
      } else
        \$('#customQuality').hide();
  
      \$('#anyQualities option').each(function(i) {
          var result = preset & \$(this).val()
          if (result > 0) \$(this).attr('selected', 'selected');
          else \$(this).attr('selected', false);
      });

      \$('#bestQualities option').each(function(i) {
          var result = preset & (\$(this).val() << 16)
          if (result > 0) \$(this).attr('selected', 'selected');
          else \$(this).attr('selected', false);
      });

      return
  }
  
  \$('#qualityPreset').change(function(){
        \$(this).setFromPresets(\$('#qualityPreset :selected').val());
  });

});
</script>

<form action="saveGeneral" method="POST">

All non-absolute folder locations are relative to $sickbeard.PROG_DIR<br /><br />

<div class="EntryBlock"><p><strong>
    <em>NOTE:</em> Manual restart needed for web server changes!<br />
</strong></p>
<fieldset class="EntryFieldSet">

<legend>Misc</legend>
<strong>Logging directory:</strong><br />
Directory where Sick Beard should place its logs<br />
<input type="text" name="log_dir" id="log_dir" value="$sickbeard.LOG_DIR" size="30"><br />
<br />

<label for="launch_browser"><input type="checkbox" name="launch_browser" id="launch_browser" #if $sickbeard.LAUNCH_BROWSER then "CHECKED" else ""#> <strong>Launch browser on startup</strong></label><br />
Should Sick Beard open its home page in your<br />browser when you start it?<br />
<br />

<label for="version_notify"><input type="checkbox" name="version_notify" id="version_notify" #if $sickbeard.VERSION_NOTIFY then "CHECKED" else ""#> <strong>Notify when new versions are available</strong></label><br />
Only works for windows builds and git installations
<br />

</fieldset>
</div>

<div class="EntryBlock">
<fieldset class="EntryFieldSet">

<legend>Metadata</legend>

#set $m_dict = $metadata.getMetadataGeneratorList()
<select name="metadata_type">
#for $cur_generator in $m_dict:
<option value="$cur_generator" #if $cur_generator == $sickbeard.METADATA_TYPE then "SELECTED" else ""#>$m_dict[$cur_generator]<br />
#end for
</select><br />
<br />

<label for="metadata_show"><input type="checkbox" name="metadata_show" id="metadata_show" #if $sickbeard.METADATA_SHOW then "CHECKED" else ""#> <strong>Create show metadata file</strong></label><br />
Eg. tvshow.nfo, series.xml<br />
<br />

<label for="metadata_episode"><input type="checkbox" name="metadata_episode" id="metadata_episode" #if $sickbeard.METADATA_EPISODE then "CHECKED" else ""#> <strong>Create episode metadata files</strong></label><br />
Eg. <episode filename>.nfo<br />
<br />

<label for="art_poster"><input type="checkbox" name="art_poster" id="art_poster" #if $sickbeard.ART_POSTER then "CHECKED" else ""#> <strong>Create show posters</strong></label><br />
Eg. folder.jpg<br />
<br />

<label for="art_fanart"><input type="checkbox" name="art_fanart" id="art_fanart" #if $sickbeard.ART_FANART then "CHECKED" else ""#> <strong>Create show fanart</strong></label><br />
Eg. fanart.jpg<br />
<br />

<label for="art_thumbnails"><input type="checkbox" name="art_thumbnails" id="art_thumbnails" #if $sickbeard.ART_THUMBNAILS then "CHECKED" else ""#> <strong>Create episode thumbnails</strong></label><br />
Eg. <episode filename>.tbn<br />
<br />

<label for="art_season_thumbnails"><input type="checkbox" name="art_season_thumbnails" id="art_season_thumbnails" #if $sickbeard.ART_SEASON_THUMBNAILS then "CHECKED" else ""#> <strong>Create season thumbnails</strong></label><br />
Eg. season01.tbn<br />
<br />

</fieldset>
</div>


<div class="EntryBlock">
<fieldset class="EntryFieldSet">

<legend>Web Interface (requires restart)</legend>

<strong>HTTP port</strong><br />
Web port Sick Beard should listen on<br />
<input type="text" name="web_port" value="$sickbeard.WEB_PORT" size="10"><br />
<br />

<strong>Listen on IPv6</strong><br />
Will make Sick Beard's web built in web interface available on IPv6 interfaces<br />
<input type="checkbox" name="web_ipv6" #if $sickbeard.WEB_IPV6 then "CHECKED" else ""#><br />
<br />

<label for="web_log"><input type="checkbox" name="web_log" id="web_log" #if $sickbeard.WEB_LOG then "CHECKED" else ""#> <strong>Enable HTTP log</strong></label><br />
Whether you want cherrypy logs to be generated<br />
<br />

<strong>Sick Beard username</strong><br />
Web authentication username<br />
<input type="text" name="web_username" value="$sickbeard.WEB_USERNAME" size="10"><br />
<br />

<strong>Sick Beard password</strong><br />
Web authentication password<br />
<input type="password" name="web_password" value="$sickbeard.WEB_PASSWORD" size="10"><br />
<br />

</div>
</fieldset>

<div class="EntryBlock">
<fieldset class="EntryFieldSet">

<legend>Defaults</legend>

<strong>Initial Quality</strong><br />
Quality to assign to a newly created show<br />
#set $selected = None
<select id="qualityPreset">
<option value="0">Custom
#for $curPreset in sorted($qualityPresets):
<option value="$curPreset" #if $curPreset == $sickbeard.QUALITY_DEFAULT then "SELECTED" else ""#>$qualityPresetStrings[$curPreset]
#end for
</select><br />
<br />
<div id="customQuality">
If I don't have the episode then download it in <b>one</b> of the following qualities:<br />
#set $anyQualityList = filter(lambda x: x > $Quality.NONE, $Quality.qualityStrings)
<select id="anyQualities" name="anyQualities" multiple="multiple" size="len($anyQualityList)">
#for $curQuality in sorted($anyQualityList):
<option value="$curQuality" #if $curQuality in $anyQualities then "SELECTED" else ""#>$Quality.qualityStrings[$curQuality]
#end for
</select><br />
<br />
Then Re-download the episodes in any or all of these qualities as they are available:<br />
#set $bestQualityList = filter(lambda x: x > $Quality.SDTV, $Quality.qualityStrings)
<select id="bestQualities" name="bestQualities" multiple="multiple" size="len($bestQualityList)">
#for $curQuality in sorted($bestQualityList):
<option value="$curQuality" #if $curQuality in $bestQualities then "SELECTED" else ""#>$Quality.qualityStrings[$curQuality]
#end for
</select><br />
<br />
</div>

<label for="season_folders_default"><input type="checkbox" name="season_folders_default" id="season_folders_default" #if $sickbeard.SEASON_FOLDERS_DEFAULT then "CHECKED" else ""#> <strong>Use Season Folders</strong></label><br />
Whether show should be created with season<br />
folders enabled or disabled<br />
<br />
<strong>NOTE: The above settings do NOT change<br />
the settings in your existing shows!</strong><br />
<br />
</fieldset>
</div>

#set $naming_ep_type_text = ("1x02", "s01e02", "S01E02")
#set $naming_multi_ep_type_text = ("extend", "duplicate", "repeat")

<div class="EntryBlock">
<fieldset class="EntryFieldSet">

<legend>Episode Naming</legend>

<label for="naming_show_name"><input type="checkbox" name="naming_show_name" id="naming_show_name" #if $sickbeard.NAMING_SHOW_NAME then "CHECKED" else ""#> <strong>Include show name</strong></label><br />
<br />
<label for="naming_ep_name"><input type="checkbox" name="naming_ep_name" id="naming_ep_name" #if $sickbeard.NAMING_EP_NAME then "CHECKED" else ""#> <strong>Include episode name</strong></label><br />
<br />
<label for="naming_use_periods"><input type="checkbox" name="naming_use_periods" id="naming_use_periods" #if $sickbeard.NAMING_USE_PERIODS then "CHECKED" else ""#> <strong>Use periods</strong></label><br />
If checked all spaces will be replaced with periods<br />
<br />

<label for="naming_quality"><input type="checkbox" name="naming_quality" id="naming_quality" #if $sickbeard.NAMING_QUALITY then "CHECKED" else ""#> <strong>Include quality</strong></label><br />
If checked the episode quality will be appended to the end of the file name<br />
<br />

<label for="naming_dates"><input type="checkbox" name="naming_dates" id="naming_dates" #if $sickbeard.NAMING_DATES then "CHECKED" else ""#> <strong>Use dates for air-by-date shows</strong></label><br />
If checked the date string will be used instead of the<br />
season/episode for air-by-date shows (eg. 2010-02-15 vs S12E23)<br />
<br />

<strong>Separator Style</strong><br />
<select name="naming_sep_type" id="naming_sep_type">
#for ($i, $ex) in enumerate($config.naming_sep_type_text):
<option value="$i" #if $i == int($sickbeard.NAMING_SEP_TYPE) then "SELECTED" else ""#>$ex
#end for
</select><br />
<br />

<strong>Number Style</strong><br />
Style of season/episode numbers<br />
<select name="naming_ep_type" id="naming_ep_type">
#for ($i, $ex) in enumerate($config.naming_ep_type_text):
<option value="$i" #if $i == int($sickbeard.NAMING_EP_TYPE) then "SELECTED" else ""#>$ex
#end for
</select><br />
<br />

<strong>Example:</strong> <div id="normalExampleText"></div><br />

<strong>Multi-episode Style</strong><br />
Style of season/episode numbers for multi-episodes<br />
<select name="naming_multi_ep_type" id="naming_multi_ep_type">
#for ($i, $ex) in enumerate($config.naming_multi_ep_type_text):
<option value="$i" #if $i == int($sickbeard.NAMING_MULTI_EP_TYPE) then "SELECTED" else ""#>$ex
#end for
</select><br />
<br />

<strong>Example:</strong> <div id="multiExampleText"></div><br />
<br />

</fieldset>
</div>


<p>
<input type="submit" value="Save Changes">
</p>
</form>

<script type="text/javascript" charset="utf-8">
    jQuery('#log_dir').fileBrowser({ title: 'Select Log Directory' });
</script>

#include $os.path.join($sickbeard.PROG_DIR, "data/interfaces/default/inc_bottom.tmpl")
